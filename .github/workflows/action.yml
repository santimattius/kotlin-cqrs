# This is a basic workflow to help you get started with Actions

name: Quality Checks
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  detekt:
    name: Detekt - Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}
      - name: DeteKt
        uses: natiginfo/action-detekt-all@1.20.0-RC1
        with:
          args: --fail-fast --config config/detekt/detekt.yml
  tests:
    # The type of runner that the job will run on
    name: Tests
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      # Execute unit tests
      - name: Run Tests
        run: ./gradlew jacocoTestReport

      - name: Generate Report
        uses: actions/upload-artifact@v2
        with:
          name: jacocoTestReport
          path: build/reports/jacoco/test

      - name: Download Test Reports Folder
        uses: actions/download-artifact@v2
        with:
          name: jacocoTestReport
          path: build/reports/jacoco/test

      - name: Upload Test Report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: build/reports/jacoco/test/jacocoTestReport.xml # optional
          flags: unittests # optional
          name: pull-request # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
